name: Apply PR template by branch

on:
  pull_request_target:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  apply-template:
    runs-on: ubuntu-latest
    steps:
      - name: Decide which template to use
        id: pick
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          TEMPLATE_PATH=""
          if [[ "$BRANCH" == feature/* ]]; then
            TEMPLATE_PATH=".github/PULL_REQUEST_TEMPLATE/feature_template.md"
          elif [[ "$BRANCH" == bugfix/* || "$BRANCH" == fix/* ]]; then
            TEMPLATE_PATH=".github/PULL_REQUEST_TEMPLATE/bugfix_template.md"
          else
            TEMPLATE_PATH=".github/PULL_REQUEST_TEMPLATE/feature_template.md"
          fi
          echo "path=$TEMPLATE_PATH" >> "$GITHUB_OUTPUT"

      - name: Load template from default branch
        id: load
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const path = core.getInput('path');
            const repo = await github.rest.repos.get(context.repo);
            const defaultBranch = repo.data.default_branch;

            const res = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path,
              ref: defaultBranch,
            });

            if (!Array.isArray(res.data) && res.data.type === 'file') {
              const body = Buffer.from(res.data.content, 'base64').toString('utf8');
              core.setOutput('body', body);
            } else {
              core.setFailed(`Template not found at: ${path}`);
            }
          result-encoding: string
          inputs: |
            path: ${{ steps.pick.outputs.path }}

      - name: Apply template if needed
        uses: actions/github-script@v7
        with:
          script: |
            const marker = '<!-- AUTO-TEMPLATE -->';
            const current = context.payload.pull_request.body || '';
            const chosen = `${marker}\n${core.getInput('template')}`;

            if (!current.trim() || current.includes(marker)) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: chosen
              });
              core.info('PR body updated with selected template.');
            } else {
              core.info('PR body already edited by a human â€” leaving it as is.');
            }
          inputs: |
            template: ${{ steps.load.outputs.body }}

